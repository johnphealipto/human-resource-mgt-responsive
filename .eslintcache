[{"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\index.js":"1","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\store.js":"2","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\App.js":"3","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reportWebVitals.js":"4","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\userReducers.js":"5","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\profileReducers.js":"6","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\nextOfKinReducer.js":"7","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\educationReducers.js":"8","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\leaveApplication.js":"9","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\agentLeaveReducer.js":"10","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\messageReducer.js":"11","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\jobApplicantsReducer.js":"12","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\LoginScreen.js":"13","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\DashboardScreen.js":"14","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\PasswordScreen.js":"15","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\StaffListScreen.js":"16","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\StaffCreateScreen.js":"17","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\StaffEditScreen.js":"18","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\HomeScreen.js":"19","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\RoleEditScreen.js":"20","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\ProfileScreen.js":"21","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\NextOfKinScreen.js":"22","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\EducationScreen.js":"23","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\HrHomeScreen.js":"24","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AdminProfileScreen.js":"25","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AdminNextOfKinScreen.js":"26","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AdminEducationScreen.js":"27","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\MyLeaveApplicationScreen.js":"28","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\ResetPasswordScreen.js":"29","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AllLeaveApplications.js":"30","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\UpdateMyLeave.js":"31","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AgentLeaveApplicationScreen.js":"32","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\UpdateTeamApplicationScreen.js":"33","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AllAgentLeaveApplicationsScreen.js":"34","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\TeamLeaveApplicationsScreen.js":"35","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\ViewProfile.js":"36","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\UpdateProfileScreen.js":"37","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\ChangePassword.js":"38","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\SupportService.js":"39","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AllSupportService.js":"40","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\DepartmentLeavesScreen.js":"41","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\ApproveLeaveScreen.js":"42","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\EmployeeUpdateLeaveScreen.js":"43","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\SupportMessaging.js":"44","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIUserAssessment.js":"45","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPITeamAssessments.js":"46","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIHODReview.js":"47","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIAllAssessment.js":"48","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIHRreview.js":"49","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIuserOverview.js":"50","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIuserDetails.js":"51","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\JobApplication.js":"52","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AllJobApplications.js":"53","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\userConstants.js":"54","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\nextOfKinConstants.js":"55","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\profileConstants.js":"56","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\educationConstants.js":"57","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\leaveApplicationConstants.js":"58","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\agentLeaveContants.js":"59","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\messageConstants.js":"60","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\jobApplicantsConstants.js":"61","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\Message.js":"62","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\Footer.js":"63","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\Header.js":"64","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\FixedNavbar.js":"65","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\Paginate.js":"66","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\SearchBox.js":"67","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\userActions.js":"68","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\leaveApplication.js":"69","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\jobApplicantsAction.js":"70","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\messageActions.js":"71","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\Loader.js":"72","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\agentLeaveActions.js":"73","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\shared\\baseUrl.js":"74","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\AdminFixedNav.js":"75","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\educationActions.js":"76","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\nextOfKinActions.js":"77","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\profileActions.js":"78"},{"size":614,"mtime":1622535832805,"results":"79","hashOfConfig":"80"},{"size":5422,"mtime":1622535832868,"results":"81","hashOfConfig":"80"},{"size":8283,"mtime":1622535832714,"results":"82","hashOfConfig":"80"},{"size":375,"mtime":1622535832805,"results":"83","hashOfConfig":"80"},{"size":8488,"mtime":1622535832805,"results":"84","hashOfConfig":"80"},{"size":3186,"mtime":1622535832805,"results":"85","hashOfConfig":"80"},{"size":3050,"mtime":1622535832805,"results":"86","hashOfConfig":"80"},{"size":3286,"mtime":1622535832805,"results":"87","hashOfConfig":"80"},{"size":7961,"mtime":1622535832805,"results":"88","hashOfConfig":"80"},{"size":4859,"mtime":1622535832805,"results":"89","hashOfConfig":"80"},{"size":5486,"mtime":1622535832805,"results":"90","hashOfConfig":"80"},{"size":1468,"mtime":1622535832805,"results":"91","hashOfConfig":"80"},{"size":3605,"mtime":1622535832852,"results":"92","hashOfConfig":"80"},{"size":7687,"mtime":1622535832821,"results":"93","hashOfConfig":"80"},{"size":4834,"mtime":1622535832852,"results":"94","hashOfConfig":"80"},{"size":5807,"mtime":1622535832852,"results":"95","hashOfConfig":"80"},{"size":13473,"mtime":1622535832852,"results":"96","hashOfConfig":"80"},{"size":13105,"mtime":1622535832852,"results":"97","hashOfConfig":"80"},{"size":4520,"mtime":1622535832837,"results":"98","hashOfConfig":"80"},{"size":8233,"mtime":1622535832852,"results":"99","hashOfConfig":"80"},{"size":11550,"mtime":1622535832852,"results":"100","hashOfConfig":"80"},{"size":9313,"mtime":1622535832852,"results":"101","hashOfConfig":"80"},{"size":7610,"mtime":1622535832837,"results":"102","hashOfConfig":"80"},{"size":2701,"mtime":1622535832837,"results":"103","hashOfConfig":"80"},{"size":20493,"mtime":1622535832821,"results":"104","hashOfConfig":"80"},{"size":11444,"mtime":1622535832821,"results":"105","hashOfConfig":"80"},{"size":10726,"mtime":1622535832821,"results":"106","hashOfConfig":"80"},{"size":11557,"mtime":1622535832852,"results":"107","hashOfConfig":"80"},{"size":4382,"mtime":1622535832852,"results":"108","hashOfConfig":"80"},{"size":3806,"mtime":1622535832821,"results":"109","hashOfConfig":"80"},{"size":8391,"mtime":1622535832868,"results":"110","hashOfConfig":"80"},{"size":9666,"mtime":1622535832821,"results":"111","hashOfConfig":"80"},{"size":6657,"mtime":1622535832868,"results":"112","hashOfConfig":"80"},{"size":3102,"mtime":1622535832821,"results":"113","hashOfConfig":"80"},{"size":3010,"mtime":1622535832868,"results":"114","hashOfConfig":"80"},{"size":5753,"mtime":1622535832868,"results":"115","hashOfConfig":"80"},{"size":2399,"mtime":1622535832868,"results":"116","hashOfConfig":"80"},{"size":4567,"mtime":1622535832821,"results":"117","hashOfConfig":"80"},{"size":4691,"mtime":1622535832868,"results":"118","hashOfConfig":"80"},{"size":3667,"mtime":1622535832821,"results":"119","hashOfConfig":"80"},{"size":3420,"mtime":1622535832837,"results":"120","hashOfConfig":"80"},{"size":9093,"mtime":1622535832821,"results":"121","hashOfConfig":"80"},{"size":6950,"mtime":1622535832837,"results":"122","hashOfConfig":"80"},{"size":4716,"mtime":1622535832852,"results":"123","hashOfConfig":"80"},{"size":9992,"mtime":1622585288482,"results":"124","hashOfConfig":"80"},{"size":3894,"mtime":1622535832837,"results":"125","hashOfConfig":"80"},{"size":5941,"mtime":1622535832837,"results":"126","hashOfConfig":"80"},{"size":4373,"mtime":1622535832837,"results":"127","hashOfConfig":"80"},{"size":2661,"mtime":1622535832837,"results":"128","hashOfConfig":"80"},{"size":3080,"mtime":1622535832852,"results":"129","hashOfConfig":"80"},{"size":1977,"mtime":1622535832852,"results":"130","hashOfConfig":"80"},{"size":8191,"mtime":1622535832837,"results":"131","hashOfConfig":"80"},{"size":4887,"mtime":1622535832821,"results":"132","hashOfConfig":"80"},{"size":3492,"mtime":1622535832758,"results":"133","hashOfConfig":"80"},{"size":1238,"mtime":1622535832754,"results":"134","hashOfConfig":"80"},{"size":1398,"mtime":1622535832756,"results":"135","hashOfConfig":"80"},{"size":1480,"mtime":1622535832748,"results":"136","hashOfConfig":"80"},{"size":3790,"mtime":1622535832752,"results":"137","hashOfConfig":"80"},{"size":2276,"mtime":1622535832746,"results":"138","hashOfConfig":"80"},{"size":2182,"mtime":1622535832753,"results":"139","hashOfConfig":"80"},{"size":620,"mtime":1622535832751,"results":"140","hashOfConfig":"80"},{"size":295,"mtime":1622535832743,"results":"141","hashOfConfig":"80"},{"size":387,"mtime":1622535832736,"results":"142","hashOfConfig":"80"},{"size":2969,"mtime":1622535832738,"results":"143","hashOfConfig":"80"},{"size":6902,"mtime":1622535832735,"results":"144","hashOfConfig":"80"},{"size":800,"mtime":1622535832744,"results":"145","hashOfConfig":"80"},{"size":847,"mtime":1622535832745,"results":"146","hashOfConfig":"80"},{"size":15532,"mtime":1622535832728,"results":"147","hashOfConfig":"80"},{"size":11245,"mtime":1622535832720,"results":"148","hashOfConfig":"80"},{"size":2968,"mtime":1622535832719,"results":"149","hashOfConfig":"80"},{"size":7200,"mtime":1622535832722,"results":"150","hashOfConfig":"80"},{"size":350,"mtime":1622535832742,"results":"151","hashOfConfig":"80"},{"size":6951,"mtime":1622535832716,"results":"152","hashOfConfig":"80"},{"size":62,"mtime":1622535832868,"results":"153","hashOfConfig":"80"},{"size":2946,"mtime":1622535832733,"results":"154","hashOfConfig":"80"},{"size":5076,"mtime":1622535832718,"results":"155","hashOfConfig":"80"},{"size":4898,"mtime":1622535832724,"results":"156","hashOfConfig":"80"},{"size":4980,"mtime":1622535832727,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"l4xrxz",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"160"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"160"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"160"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"160"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"160"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"160"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"160"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"160"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"160"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"160"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"160"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"160"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"160"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\index.js",[],["328","329"],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\store.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\App.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reportWebVitals.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\userReducers.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\profileReducers.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\nextOfKinReducer.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\educationReducers.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\leaveApplication.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\agentLeaveReducer.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\messageReducer.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\reducers\\jobApplicantsReducer.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\LoginScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\DashboardScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\PasswordScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\StaffListScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\StaffCreateScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\StaffEditScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\HomeScreen.js",["330","331"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails } from '../actions/userActions';\r\nimport \"../styles/Main.css\";\r\nimport '../styles/ProfileScreen.css';\r\nimport Header from '../components/Header';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport hello from \"../img/hello.svg\";\r\nimport Footer from '../components/Footer';\r\n\r\nconst HomeScreen = ({ history }) => {\r\n   \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } \r\n    }, [history, userInfo])\r\n\r\n\r\n    // ---- For the FixedNavBar\r\n    const [sidebarOpen, setSidebarOpen] = useState(false);\r\n    \r\n    const openSidebar = () => {\r\n      setSidebarOpen(true);\r\n    };\r\n    \r\n    const closeSidebar = () => {\r\n      setSidebarOpen(false);\r\n    };\r\n\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n        <Header sidebarOpen={sidebarOpen} openSidebar={openSidebar} />\r\n        <FixedNavbar sidebarOpen={sidebarOpen} closeSidebar={closeSidebar} />\r\n        \r\n        <main>\r\n            <div className=\"dashboard-body\">\r\n                <div className=\"dashboard-title\">\r\n                <img src={hello} alt=\"hello\" />\r\n                <div className=\"dashboard-greeting\">\r\n                    <h1>Hello {userInfo.firstname}</h1>\r\n                    <p>Welcome to your admin dashboard</p>\r\n                </div>\r\n                </div>\r\n                <div className=\"dashboard-cards\">\r\n                <div className=\"card\">\r\n                    <i className=\"fas fa-user-check fa-2x\"></i>\r\n                    <div className=\"card-inner\">\r\n                    <p>Attendance</p>\r\n                    <span className=\"font-bold text-title\"></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <i className=\"fa fa-calendar fa-2x\"></i>\r\n                    <div className=\"card-inner\">\r\n                    <p>Conversions</p>\r\n                    <span className=\"font-bold text-title\"></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <i className=\"fas fa-chart-line fa-2x\"></i>\r\n                    <div className=\"card-inner\">\r\n                    <p>Average Perfomance</p>\r\n                    <span className=\"font-bold text-title\"></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <i className=\"fa fa-thumbs-up fa-2x\"></i>\r\n                    <div className=\"card-inner\">\r\n                    <p>Number of recommendations</p>\r\n                    <span className=\"font-bold text-title\"></span>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"charts\">\r\n                <div className=\"charts-left\">\r\n                    <div className=\"charts-left-title\">\r\n                    <div>\r\n                        <h1>daily Reports</h1>\r\n                        <p>Opebi, Lagos, Nigeria</p>\r\n                    </div>\r\n                    <i className=\"fa fa-usd\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"charts-right\">\r\n                    <div className=\"charts-right-title\">\r\n                    <div>\r\n                        <h1>daily Reports</h1>\r\n                        <p>Opebi, Lagos, Nigeria</p>\r\n                    </div>\r\n                    <i className=\"fa fa-usd\"></i>\r\n                    </div>\r\n\r\n                    <div className=\"charts-right-cards\">\r\n                    <div className=\"card1\">\r\n                        <h1>Income</h1>\r\n                        <p></p>\r\n                    </div>\r\n                    <div className=\"card2\">\r\n                        <h1>Sales</h1>\r\n                        <p></p>\r\n                    </div>\r\n                    <div className=\"card3\">\r\n                        <h1>Users</h1>\r\n                        <p></p>\r\n                    </div>\r\n                    <div className=\"card4\">\r\n                        <h1>Plans</h1>\r\n                        <p></p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </main>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen;","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\RoleEditScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\NextOfKinScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\EducationScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\HrHomeScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AdminProfileScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AdminNextOfKinScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AdminEducationScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\MyLeaveApplicationScreen.js",["332","333","334"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Form, Col } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { createLeaveApplication, getMyLeaveApplication } from '../actions/leaveApplication';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Paginate from '../components/Paginate';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\nimport axios from 'axios'\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport Message from '../components/Message';\r\nimport { LEAVE_APPLICATION_CREATE_RESET } from '../constants/leaveApplicationConstants';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MyLeaveApplicationScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch()\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  } \r\n  \r\n  const [leaveType, setLeaveType] = useState('')\r\n  const [fromDate, setLeaveStartDate] = useState('')\r\n  const [toDate, setLeaveEndDate] = useState('')\r\n  const [reasonForLeave, setLeaveDescription] = useState('')\r\n  const [reportsTo, setReportsTo] = useState('')\r\n  const [noOfDays, setNoOfDays] = useState(0)\r\n  const [leaveStatus] = useState('')\r\n  const [hods, setHods] = useState([])\r\n  const [headeHR, setHeadHR] = useState('')\r\n  const [superadmins, setSuperAdmins] = useState([])\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n  const employees = 'agentleave'\r\n    \r\n  \r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const leaveAppDetails = useSelector(state => state.leaveAppDetails)\r\n  const { data, pages, page } = leaveAppDetails\r\n\r\n  const updateLeaveApp = useSelector(state => state.updateLeaveApp)\r\n  const { success:successUpdate } = updateLeaveApp\r\n\r\n  const createLeaveApp = useSelector(state => state.createLeaveApp)\r\n  const { success:successCreate, error:errorCreate } = createLeaveApp\r\n\r\n\r\n    useEffect(() => {\r\n\r\n      if(!userInfo) {\r\n          history.push('/')\r\n      } else {\r\n          if(successCreate || successUpdate) {\r\n            dispatch({\r\n              type: LEAVE_APPLICATION_CREATE_RESET\r\n            })\r\n            \r\n            handleClose()\r\n          } else {\r\n            dispatch(getMyLeaveApplication(pageNumber))\r\n\r\n            const config = {\r\n              headers: {\r\n                  Authorization: `Bearer ${userInfo.token}`\r\n              }\r\n            }\r\n    \r\n            async function fetchHODS() {\r\n              const request = await axios.get(\r\n                baseUrl + '/api/v1/employees/hods', config)\r\n              setHods(request.data.data);\r\n              return request;\r\n            \r\n            }\r\n            async function fetchAdmins() {\r\n              const request = await axios.get(\r\n                baseUrl + '/api/v1/employees/superadmins', config)\r\n              setSuperAdmins(request.data.data);\r\n              return request;\r\n            \r\n            }\r\n\r\n            fetchHODS();\r\n            fetchAdmins();\r\n\r\n\r\n          }\r\n            \r\n\r\n          \r\n          \r\n         \r\n      }\r\n  }, [dispatch, history, data, successCreate, successUpdate, userInfo, pageNumber])\r\n\r\n\r\n\r\n\r\n  const createsubmitHandler= (e) => {\r\n    e.preventDefault(e)\r\n   \r\n      dispatch(createLeaveApplication(\r\n        leaveType,\r\n        fromDate,\r\n        toDate,\r\n        noOfDays,\r\n        reportsTo,\r\n        reasonForLeave,\r\n        leaveStatus\r\n      ))  \r\n  }\r\n\r\n  // --- Leave Application Eligibilty\r\n  const dateJoined = new Date(userInfo.dateOfJoining);\r\n  const currentDate = new Date();\r\n  const diffTime = Math.abs(currentDate - dateJoined);\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  const daysLeft = 365 - diffDays;\r\n\r\n\r\n  // ---- For the FixedNavBar\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n    \r\n  const openSidebar = () => {\r\n    setSidebarOpen(true);\r\n  };\r\n  \r\n  const closeSidebar = () => {\r\n    setSidebarOpen(false);\r\n  };\r\n\r\n  const dropDown = (hods) => {\r\n    hods?.map(hod => (\r\n      <h1 key={hod._id}> {hod.firstname}</h1>\r\n     ))\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n\t\t\t<Header sidebarOpen={sidebarOpen} openSidebar={openSidebar} />\r\n\t\t\t<FixedNavbar sidebarOpen={sidebarOpen} closeSidebar={closeSidebar} />\r\n\t\t\t<main className='profilescreen-wrapper'>\r\n\t\t\t\t<div className=\"leave-body\">\r\n\t\t\t\t<div className='allLeave-title'>\r\n          <>\r\n\t\t\t\t\t  <h3>My Leave</h3>\r\n            <p>{userInfo.firstname}'s leave details</p>\r\n          </>\r\n\t\t\t\t\t  <Button onClick={handleShow} className='applyleave-btn'>\r\n              Apply Leave\r\n            </Button>\r\n          </div>\r\n\t\t\t\t\t<div className='myleave-wrapper'>\r\n      <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        className=\"myleave-modal\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Apply for Leave</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n          {(diffDays > 365) ? (\r\n            <Form onSubmit={createsubmitHandler}>\r\n              <Form.Group controlId=\"leaveType\">\r\n                <Form.Label>Leave Type</Form.Label>\r\n                <Form.Control \r\n                  as=\"select\"\r\n                  custom \r\n                  size='sm'\r\n                  value={leaveType}\r\n                  onChange={(e) => setLeaveType(e.target.value)}>\r\n                    <option value=''>Select Leave Type...</option>\r\n                    <option value='Sick-Leave'>Sick Leave</option>\r\n                    <option value='Paid-Leave'>Paid Leave</option>\r\n                    <option value='Casual-Leave'>Casual Leave</option>\r\n                    <option value='Compassionate-Leave'>Compassionate-Leave</option>\r\n                    <option value='Maternity-Leave'>Maternity Leave</option>\r\n                    <option value='Other'>Other</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"reportsTo\">\r\n                  <Form.Label>Reports To</Form.Label>\r\n                  <Form.Control \r\n                    as=\"select\"\r\n                    custom \r\n                    size='sm'\r\n                    value={reportsTo}\r\n                    onChange={(e) => setReportsTo(e.target.value)}>\r\n                      <option>Reports To...</option>\r\n                      {(userInfo.role === 'Head Of Department' || userInfo.role === 'Super Admin') ?\r\n                        superadmins.map(superadmin => (\r\n                          <option key={superadmin._id} value={superadmin._id}>{superadmin.firstname} {superadmin.lastname}</option>\r\n                        ))\r\n                        : \r\n                        hods.map(hod => (\r\n                          <option key={hod._id} value={hod._id}>{hod.firstname} {hod.lastname}</option>\r\n                        ))\r\n                      }\r\n                  </Form.Control>\r\n                  \r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId='noOfDays'>\r\n                  <Form.Label>No Of Days</Form.Label>\r\n                  <Form.Control type='number' placeholder='0'  value={noOfDays}\r\n                    onChange={(e) => setNoOfDays(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              \r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId='startDate'>\r\n                  <Form.Label>Start Date</Form.Label>\r\n                  <Form.Control type='date' placeholder='Start Date'  value={fromDate}\r\n                    onChange={(e) => setLeaveStartDate(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId='endDate'>\r\n                  <Form.Label>End Date</Form.Label>\r\n                  <Form.Control type='date' placeholder='End Date'  value={toDate}\r\n                    onChange={(e) => setLeaveEndDate(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Detailed Reason For Leave Application</Form.Label>\r\n                <Form.Control \r\n                  as=\"textarea\" \r\n                  rows={4} \r\n                  style={{ backgroundColor: 'var(--input-field-color)' }}\r\n                  value={reasonForLeave}\r\n                  onChange={(e) => setLeaveDescription(e.target.value)}/>\r\n              </Form.Group>\r\n              <hr />\r\n              <Button className='applyleave-btn mb-2 mr-3' type='submit'>\r\n                Apply\r\n              </Button>\r\n              <Button className='mb-2' variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </Form>\r\n           ) : (\r\n            <div className='not-eligible'>\r\n              <div className='not-eligible-container'>\r\n                <i className=\"fas fa-exclamation-triangle fa-2x pb-3\"></i>\r\n                <h2>Not eligible</h2>\r\n                <p>You have <code>{daysLeft}</code> days left</p>\r\n              </div>\r\n              <hr/>\r\n              <Button className='mb-2' variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n              \r\n            </div>\r\n          )}\r\n        \r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n\r\n      <Table striped bordered hover size=\"sm\" className='myleave-table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Leave Type</th>\r\n            <th>Start Date</th>\r\n            <th>End Date</th>\r\n            <th>HOD Approval</th>\r\n            <th>Final Approval</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n          {data.map(user => (\r\n            <tr key={user._id}>\r\n              <td>{user.leaveType}</td>\r\n              <td>{moment(user.fromDate).format(\"DD-MM-YYYY\")}</td>\r\n              <td>{moment(user.toDate).format(\"DD-MM-YYYY\")}</td>\r\n              <td>\r\n                {user.hodApproval ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                ) : (\r\n                    <i className='fas fa-times' style={{  color: 'red' }}></i>\r\n                )}\r\n              </td>\r\n              <td>\r\n                {user.finalApproval ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                ) : (\r\n                    <i className='fas fa-times' style={{  color: 'red' }}></i>\r\n                )}\r\n              </td>\r\n              <td>\r\n                {\r\n                  user.hodApproval && user.finalApproval ? (\r\n                    <p>APPROVED</p>\r\n                  ) : user.hodApproval ? (\r\n                    <p>PENDING</p>\r\n                  ) : user.rejected ? (\r\n                    <p>REJECTED</p>\r\n                  ) : (\r\n                    <Link to={`/employeeupdateleave/${user._id}/update`} exact className=\"update-btn\">\r\n\t\t\t\t\t\t\t\t\t    UPDATE\r\n\t\t\t\t\t\t\t      </Link>\r\n                  )\r\n                }\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      \r\n      <Paginate\r\n        destination={employees}\r\n        pages={pages} \r\n        page={page} />\t\t\t\r\n    \t\t</div>\r\n            </div>\r\n        </main>\r\n\t  </div>\r\n  );\r\n}\r\n\r\nexport default MyLeaveApplicationScreen;","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\ResetPasswordScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AllLeaveApplications.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\UpdateMyLeave.js",["335"],"import React, { useState, useEffect } from 'react';\r\nimport { Col, Form, Button, Modal} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { getAllEmployeeLeaveApplicationById, rejectEmployeeLeaveApplicationId, updateEmployeeLeaveApplicationId } from '../actions/leaveApplication';\r\nimport { LEAVE_APPLICATION_UPDATE_EMPLOYEE_RESET, LEAVE_APPLICATION_DETAILS_ID_RESET, LEAVE_APPLICATION_REJECT_RESET } from '../constants/leaveApplicationConstants';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport Message from '../components/Message';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UpdateMyLeave = ({ history, match }) => {\r\n  const leaveApplicationId = match.params.id\r\n\r\n\tconst [leaveType, setLeaveType] = useState('')\r\n  const [fromDate, setLeaveStartDate] = useState('')\r\n  const [toDate, setLeaveEndDate] = useState('')\r\n  const [noOfDays, setNoOfDays] = useState(0)\r\n  const [reasonForLeave, setLeaveDescription] = useState('')\r\n  const [leaveStatus, setLeaveStatus] = useState('')\r\n  const [approved, setApproved] = useState(false)\r\n  const [rejected, setRejected] = useState(false)\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  } \r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const leaveApplicationDetailsById = useSelector(state => state.leaveApplicationDetailsById)\r\n    const { leaveapplication } = leaveApplicationDetailsById\r\n\r\n  const updateLeaveApp = useSelector(state => state.updateLeaveApp)\r\n  const { success:successUpdate, error:errorUpdate } = updateLeaveApp\r\n\r\n  const rejectLeave = useSelector(state => state.rejectLeave)\r\n  const { success:successReject, error:errorReject } = rejectLeave\r\n\r\n\r\n  useEffect(() => {\r\n    if (userInfo  && (userInfo.role === 'Human Resource Executive' || userInfo.role === 'CEO' || userInfo.role === 'Super Admin' || userInfo.role === 'Assistant Manager - Human Resources' || userInfo.role === 'Manager - Human Resources')) {\r\n       if(successUpdate || successReject) {\r\n          dispatch({\r\n              type: LEAVE_APPLICATION_UPDATE_EMPLOYEE_RESET\r\n          })\r\n          dispatch({\r\n              type: LEAVE_APPLICATION_DETAILS_ID_RESET\r\n          })\r\n          dispatch({\r\n            type: LEAVE_APPLICATION_REJECT_RESET\r\n          })\r\n          history.push('/leaveapplications')\r\n      } else {\r\n      if(!leaveapplication || !leaveapplication.leaveType || leaveapplication._id !== leaveApplicationId) {\r\n        dispatch(\r\n        getAllEmployeeLeaveApplicationById(leaveApplicationId)\r\n      )\r\n       } else {\r\n        setLeaveType(leaveapplication.leaveType)\r\n        setLeaveStartDate(moment(leaveapplication.fromDate).format(\"YYYY-MM-DD\"))\r\n        setLeaveEndDate(moment(leaveapplication.toDate).format(\"YYYY-MM-DD\"))\r\n        setNoOfDays(leaveapplication.noOfDays)\r\n        setLeaveDescription(leaveapplication.reasonForLeave)\r\n        setLeaveStatus(leaveapplication.leaveStatus)\r\n        setApproved(leaveapplication.finalApproval)\r\n        setRejected(leaveapplication.rejected)\r\n     \r\n      }\r\n    }\r\n    } else {\r\n      history.push('/')\r\n    }\r\n   \r\n    \r\n   \r\n      \r\n  }, [history, userInfo, leaveApplicationId, leaveapplication, successUpdate, successReject, dispatch])\r\n\r\n\t\r\n\tconst updateMyLeaveHandler = (e) => {\r\n    e.preventDefault(e)\r\n\t\tdispatch(updateEmployeeLeaveApplicationId({\r\n      _id: leaveApplicationId,\r\n    }))\r\n    // history.push('/leaveapplications')\r\n  }\r\n\r\n  const handleReject = (e) => {\r\n    e.preventDefault(e)\r\n    dispatch(rejectEmployeeLeaveApplicationId({\r\n      _id: leaveApplicationId,\r\n    }))\r\n  }\r\n\r\n  // ---- For the FixedNavBar\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n    \r\n  const openSidebar = () => {\r\n    setSidebarOpen(true);\r\n  };\r\n  \r\n  const closeSidebar = () => {\r\n    setSidebarOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <>     \r\n\r\n      <div className=\"dashboard-container\">\r\n        <Header sidebarOpen={sidebarOpen} openSidebar={openSidebar} />\r\n        <FixedNavbar sidebarOpen={sidebarOpen} closeSidebar={closeSidebar} />\r\n        <main className='profilescreen-wrapper'>\r\n          <div className=\"dashboard-body\">\r\n            <div className='allLeave-title'>\r\n          <h3>FINAL LEAVE APPROVAL</h3>\r\n          </div>\r\n          {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n          {errorReject && <Message variant='danger'>{errorReject}</Message>}\r\n          <Form onSubmit={updateMyLeaveHandler} className='form-shadow'>\r\n            \r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"leaveType\">\r\n                <Form.Label>Leave Type</Form.Label>\r\n                <Form.Control \r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n                  value={leaveType}\r\n                  onChange={(e) => setLeaveType(e.target.value)}\r\n                  disabled\r\n                   >\r\n                </Form.Control>\r\n            </Form.Group>\r\n                <Form.Group as={Col} controlId='noOfDays'>\r\n                  <Form.Label>No Of Days</Form.Label>\r\n                  <Form.Control type='number' placeholder='0'  value={noOfDays}\r\n                    onChange={(e) => setNoOfDays(e.target.value)} disabled></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              \r\n              <Form.Row>\r\n              <Form.Group as={Col} controlId='startDate'>\r\n\t\t\t\t\t\t\t\t<Form.Label>Start Date</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\t\t\ttype='date'\r\n                  value={fromDate}\r\n                  onChange={(e) => setLeaveStartDate(e.target.value)}\r\n                  disabled\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group as={Col} controlId='endDate'>\r\n\t\t\t\t\t\t\t\t<Form.Label>End Date</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\t\t\ttype='date'\r\n                  value={toDate}\r\n                  onChange={(e) => setLeaveEndDate(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n              </Form.Row>\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Detailed Reason For Leave Application</Form.Label>\r\n                <Form.Control \r\n                  as=\"textarea\" \r\n                  rows={4} \r\n                  style={{ backgroundColor: 'var(--input-field-color)' }}\r\n                  value={reasonForLeave}\r\n                  onChange={(e) => setLeaveDescription(e.target.value)}\r\n                  disabled/>\r\n              </Form.Group>\r\n              {\r\n              approved ? (\r\n                <Link to='/leaveapplications' className='btn btn-light my-3 go-back-btn'>\r\n                    APPROVED || Go Back\r\n                </Link>\r\n              ) : rejected ? (\r\n                <Link to='/leaveapplications' className='btn btn-light my-3 go-back-btn'>\r\n                    REJECTED || Go Back\r\n                </Link>\r\n              ) :\r\n                <>\r\n                  <Button className='applyleave-btn mb-2 mr-3' type='submit'>\r\n                    Approve\r\n                  </Button>\r\n                  <Button className='mb-2 rejectleave-btn' onClick={handleShow} >\r\n                    Reject\r\n                  </Button>\r\n                   <Modal show={show} onHide={handleClose}>\r\n                  <div className='not-eligible'>\r\n              <div className='not-eligible-container'>\r\n        <Modal.Header closeButton>\r\n         \r\n          <Modal.Title>Reject Leave</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          \r\n                <i className=\"fas fa-exclamation-triangle fa-2x pb-3\"></i><br/>\r\n          <p><h3>Are you sure you want to Reject!</h3></p>\r\n         \r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button className='mb-2 rejectleave-btn' style={{ backgroundColor: '#e2522e', borderRadius: 50 }}  onClick={handleReject}>\r\n            Reject\r\n          </Button>\r\n        </Modal.Footer>\r\n         </div>\r\n          </div>\r\n      </Modal>\r\n                </>\r\n            }\r\n          </Form>\r\n            </div>\r\n            <Footer />\r\n        </main>\r\n\t    </div>\r\n    \t\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdateMyLeave;","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AgentLeaveApplicationScreen.js",["336","337"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { Table, Button, Modal, Form, Col } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Paginate from '../components/Paginate';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\nimport { createAgentLeaveApplication, getAgentApplication } from '../actions/agentLeaveActions';\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport Message from '../components/Message';\r\n\r\nconst AgentLeaveApplicationScreen = ({ history, match }) => {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  \r\n  const [leaveType, setLeaveType] = useState('')\r\n  const [fromDate, setLeaveStartDate] = useState('')\r\n  const [toDate, setLeaveEndDate] = useState('')\r\n  const [noOfDays, setNoOfDays] = useState(0)\r\n  const [supervisor, setSupervisor] = useState('')\r\n  const [reasonForLeave, setLeaveDescription] = useState('')\r\n  const [leaveStatus] = useState('')\r\n  const [teamLeadss, setTeamLeadss] = useState([])\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n  const employees = 'myleave'\r\n    \r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const agentLeaveApp = useSelector(state => state.agentLeaveApp)\r\n  const { data, pages, page } = agentLeaveApp\r\n\r\n  const updateLeaveApp = useSelector(state => state.updateLeaveApp)\r\n  const { success:successUpdate } = updateLeaveApp\r\n\r\n  const createAgentLeave = useSelector(state => state.createAgentLeave)\r\n  const { success:successCreate, error:errorCreate } = createAgentLeave\r\n\r\n  const teamLeadList = useSelector(state => state.teamLeadList)\r\n  const { loading, teamLeads } = teamLeadList\r\n\r\n\r\n    useEffect(() => {\r\n\r\n      if(userInfo && (userInfo.role === 'Agent')) {\r\n          \r\n          dispatch(getAgentApplication(pageNumber))\r\n          // dispatch(listTeamLeads())\r\n          // setTeamLeadss(teamLeads)\r\n\r\n          const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n          }\r\n\r\n        \r\n        \r\n          async function fetchData() {\r\n            const request = await axios.get(\r\n              baseUrl + '/api/v1/employees/teamleads', config)\r\n            setTeamLeadss(request.data.data);\r\n            return request;\r\n          \r\n          \r\n          \r\n          }\r\n          fetchData();\r\n      } else {\r\n        history.push('/')\r\n      }\r\n  }, [dispatch, history, data, successCreate, successUpdate, userInfo, pageNumber])\r\n\r\n\r\n\r\n\r\n  const createsubmitHandler= (e) => {\r\n    e.preventDefault(e)\r\n      \r\n      dispatch(createAgentLeaveApplication(\r\n        leaveType,\r\n        fromDate,\r\n        toDate,\r\n        noOfDays,\r\n        supervisor,\r\n        reasonForLeave,\r\n        leaveStatus\r\n      ))\r\n    \r\n    \r\n  }\r\n\r\n  \r\n  // --- Leave Application Eligibilty\r\n  const dateJoined = new Date(userInfo.dateOfJoining);\r\n  const currentDate = new Date();\r\n  const diffTime = Math.abs(currentDate - dateJoined);\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  const daysLeft = 90 - diffDays\r\n\r\n\r\n  // ---- For the FixedNavBar\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n    \r\n  const openSidebar = () => {\r\n    setSidebarOpen(true);\r\n  };\r\n  \r\n  const closeSidebar = () => {\r\n    setSidebarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n\t\t\t<Header sidebarOpen={sidebarOpen} openSidebar={openSidebar} />\r\n\t\t\t<FixedNavbar sidebarOpen={sidebarOpen} closeSidebar={closeSidebar} />\r\n\t\t\t<main>\r\n\t\t\t\t<div className=\"leave-body\">\r\n\t\t\t\t<div className='allLeave-title'>\r\n\t\t\t\t\t  <h3>My Leave</h3>\r\n\t\t\t\t\t  <Button onClick={handleShow} className='applyleave-btn'>\r\n              Apply Leave\r\n            </Button>\r\n          </div>\r\n\t\t\t\t\t<div className='myleave-wrapper'>\r\n      <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        className=\"myleave-modal\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Apply for Leave</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n          {(diffDays > 90) ? (\r\n            \r\n            <Form onSubmit={createsubmitHandler}>\r\n              <Form.Group controlId=\"leaveType\">\r\n                <Form.Label>Leave Type</Form.Label>\r\n                <Form.Control \r\n                  as=\"select\"\r\n                  custom \r\n                  size='sm'\r\n                  value={leaveType}\r\n                  onChange={(e) => setLeaveType(e.target.value)}>\r\n                    <option value=''>Select Leave Type...</option>\r\n                    <option value='Sick-Leave'>Sick Leave</option>\r\n                    <option value='Paid-Leave'>Paid Leave</option>\r\n                    <option value='Casual-Leave'>Casual Leave</option>\r\n                    <option value='Compassionate-Leave'>Compassionate-Leave</option>\r\n                    <option value='Maternity-Leave'>Maternity Leave</option>\r\n                    <option value='Other'>Other</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"reportsTo\">\r\n                  <Form.Label>Reports To</Form.Label>\r\n                  <Form.Control \r\n                    as=\"select\"\r\n                    custom \r\n                    size='sm'\r\n                    value={supervisor}\r\n                    onChange={(e) => setSupervisor(e.target.value)}>\r\n                      <option>Select Team Lead...</option>\r\n                      {\r\n                        teamLeadss.map(teamLead => (\r\n                          <option key={teamLead._id} value={teamLead._id}>{teamLead.firstname} {teamLead.lastname}</option>\r\n                        ))\r\n                        \r\n                      }\r\n                  </Form.Control>\r\n                  \r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId='noOfDays'>\r\n                  <Form.Label>No Of Days</Form.Label>\r\n                  <Form.Control type='number' placeholder='0'  value={noOfDays}\r\n                    onChange={(e) => setNoOfDays(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId='startDate'>\r\n                  <Form.Label>Start Date</Form.Label>\r\n                  <Form.Control type='date' placeholder='Start Date'  value={fromDate}\r\n                    onChange={(e) => setLeaveStartDate(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId='endDate'>\r\n                  <Form.Label>End Date</Form.Label>\r\n                  <Form.Control type='date' placeholder='End Date'  value={toDate}\r\n                    onChange={(e) => setLeaveEndDate(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Detailed Reason For Leave Application</Form.Label>\r\n                <Form.Control \r\n                  as=\"textarea\" \r\n                  rows={3} \r\n                  style={{ backgroundColor: 'var(--input-field-color)' }}\r\n                  value={reasonForLeave}\r\n                  onChange={(e) => setLeaveDescription(e.target.value)}/>\r\n              </Form.Group>\r\n              <Form.Group controlId='status'>\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Control placeholder=\"Pending\" disabled />\r\n              </Form.Group>\r\n              <hr />\r\n              <Button className='applyleave-btn mb-2 mr-3' type='submit' onClick={handleClose}>\r\n                Apply\r\n              </Button>\r\n              <Button className='mb-2' variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </Form>\r\n           ) : (\r\n            <div className='not-eligible'>\r\n              <div className='not-eligible-container'>\r\n                <i className=\"fas fa-exclamation-triangle fa-2x pb-3\"></i>\r\n                <h2>Not eligible</h2>\r\n                <code>You have {daysLeft} days left</code>\r\n              </div>\r\n              <hr />\r\n              <Button className='mb-2' variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </div>\r\n          )}\r\n        \r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n\r\n      <Table striped bordered hover size=\"sm\" className='myleave-table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Leave Type</th>\r\n            <th>Start Date</th>\r\n            <th>End Date</th>\r\n            <th>Detailed Reason</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map(user => (\r\n            <tr key={user._id}>\r\n              <td>{user.leaveType}</td>\r\n              <td>{moment(user.fromDate).format(\"DD-MM-YYYY\")}</td>\r\n              <td>{moment(user.toDate).format(\"DD-MM-YYYY\")}</td>\r\n              <td>{user.reasonForLeave}</td>\r\n              <td>{user.leaveStatus}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <Paginate\r\n        destination={employees}\r\n        pages={pages} \r\n        page={page} />\t\t\t\r\n    \t\t</div>\r\n      </div>\r\n    </main>\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default AgentLeaveApplicationScreen;","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\UpdateTeamApplicationScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AllAgentLeaveApplicationsScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\TeamLeaveApplicationsScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\ViewProfile.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\UpdateProfileScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\ChangePassword.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\SupportService.js",["338"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Form } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\nimport \"../styles/ChatScreen.css\";\r\nimport { createMessages,  employeeMessage,  messageResponse } from '../actions/messageActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\n\r\n\r\nconst SupportService = ({ history, match}) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// -- Show New Message\r\n  const [showNewMsg, setShowNewMsg] = useState(false);\r\n  const handleCloseNewMsg = () => setShowNewMsg(false);\r\n  const handleShowNewMsg = () => setShowNewMsg(true);\r\n\r\n  // ---- For the FixedNavBar\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const openSidebar = () => {\r\n    setSidebarOpen(true);\r\n  }\r\n  const closeSidebar = () => {\r\n    setSidebarOpen(false);\r\n  }\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [body, setBody] = useState('')\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n  const keyword = match.params.keyword || ''\r\n  const employees = 'supportservice'\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const employeeMessages = useSelector(state => state.employeeMessages)\r\n  const { data, pages, page } = employeeMessages\r\n\r\n  const createMessage = useSelector(state => state.createMessage)\r\n  const { success:successCreate, error:errorCreate } = createMessage\r\n\r\n  useEffect(() => {\r\n\t\tif(!userInfo) {\r\n\t\t\thistory.push('/')\r\n\t\t} else {\r\n\t\t\tdispatch(employeeMessage(pageNumber))\r\n\t\t}\r\n\t}, [dispatch, history, successCreate, userInfo, pageNumber])\r\n\r\n\r\n\tconst createsubmitHandler= (e) => {\r\n    e.preventDefault(e)\r\n\t\tdispatch(createMessages(\r\n\t\t\ttitle,\r\n\t\t\tbody\r\n\t\t))\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n\t\t\t<Header sidebarOpen={sidebarOpen} openSidebar={openSidebar} />\r\n\t\t\t<FixedNavbar sidebarOpen={sidebarOpen} closeSidebar={closeSidebar} />\r\n\t\t\t<main>\r\n\t\t\t\t<div className=\"chat-screen-wrapper container-fluid\">\r\n\t\t\t\t\t<div className='chat-screen-head'>\r\n\t\t\t\t\t\t<div className='chat-screen-head-text'>\r\n\t\t\t\t\t\t\t<p>Drop your message - we'll respond shortly</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Button onClick={handleShowNewMsg} className='msg-btn'>\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-plus mr-2 \"></i>\r\n\t\t\t\t\t\t\t\tSend message\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n          </div>\r\n\t\t\t\t\t<div className=\"mt-4\">\r\n\r\n\t\t\t\t\t\t{/* --- New MSG Modal ---- */}\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tshow={showNewMsg}\r\n\t\t\t\t\t\t\tonHide={handleCloseNewMsg}\r\n\t\t\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\t\t\tkeyboard={false}\r\n\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t\tclassName=\"messaging-modal\">\r\n\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t<Modal.Title>New Message</Modal.Title>\r\n\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t{errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\t\t\t\t\t\t\t\t<Form onSubmit={createsubmitHandler}>\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId='inputText'>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {title}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Subject\" />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId='inputText' >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\t\t\t\t\tas=\"textarea\" \r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Type a message...\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {body}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setBody(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\trows={5} \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: 'var(--input-field-color)' }} />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Button type='submit' onClick={handleCloseNewMsg}  className='msg-btn'>\r\n\t\t\t\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<Table striped bordered hover size=\"sm\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>Date Sent</th>\r\n\t\t\t\t\t\t\t\t\t<th>Subject</th>\r\n\t\t\t\t\t\t\t\t\t<th>View</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\t\r\n\t\t\t\t\t\t\t{data.map(user => (\r\n\t\t\t\t\t\t\t<tr key={user._id}>\r\n\t\t\t\t\t\t\t\t<td>{moment(user.createdAt).format(\"DD-MM-YYYY\")}</td>\r\n\t\t\t\t\t\t\t\t<td>{user.title}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<NavLink to={`/support/${user._id}/messaging`} exact className=\"update-btn\">\r\n\t\t\t\t\t\t\t\t\t\t<Button className='msg-btn'>\r\n\t\t\t\t\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\t\r\n\t\t\t\t\t</div>\r\n\t\t\t<Paginate\r\n\t\t\tdestination={employees}\r\n\t\t\tpages={pages} \r\n\t\t\tpage={page}\r\n\t\t\tkeyword={keyword ? keyword : ''} />\r\n        </div>\r\n      </main>\r\n\t  </div>\r\n  );\r\n}\r\n\r\nexport default SupportService;","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AllSupportService.js",["339"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Form } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\nimport \"../styles/ChatScreen.css\";\r\nimport Paginate from '../components/Paginate';\r\nimport { getAllChatMessages } from '../actions/messageActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Loader from '../components/Loader';\r\n\r\n\r\nconst AllSupportService = ({ history, match}) => {\r\nconst keyword = match.params.keyword || ''\r\nconst pageNumber = match.params.pageNumber || 1\r\nconst employees = 'allsupportservice';\r\nconst dispatch = useDispatch()\r\n\r\n  // ---- For the FixedNavBar\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const openSidebar = () => {\r\n    setSidebarOpen(true);\r\n  }\r\n  \r\n  const closeSidebar = () => {\r\n    setSidebarOpen(false);\r\n  }\r\n  \r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n\r\n  const getMyMessage = useSelector(state => state.getMyMessage)\r\n  const {loading, data, pages, page} = getMyMessage\r\n\r\n   const userDetails = useSelector(state => state.userDetails)\r\n   const { user } = userDetails\r\n\r\n  useEffect(() => {\r\n\r\n    if (userInfo  && (userInfo.role === 'Human Resource Executive' || userInfo.role === 'CEO' || userInfo.role === 'Super Admin' || userInfo.role === 'Assistant Manager - Human Resources' || userInfo.role === 'Manager - Human Resources')) {\r\n       dispatch(getAllChatMessages(pageNumber))\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }, [dispatch, history, userInfo, pageNumber])\r\n\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n\t\t\t<Header sidebarOpen={sidebarOpen} openSidebar={openSidebar} />\r\n\t\t\t<FixedNavbar sidebarOpen={sidebarOpen} closeSidebar={closeSidebar} />\r\n\t\t\t<main>\r\n\t\t\t\t<div className=\"chat-screen-wrapper container-fluid\">\r\n\t\t\t\t\t<div className='chat-screen-head'>\r\n\t\t\t\t\t\t<div className='chat-screen-head-text'>\r\n\t\t\t\t\t\t\t<p>Drop your message - we'll respond shortly</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<SearchBox history={history} url={'/admin/userlist'} />\r\n\t\t\t\t\t\t</Form>\t\t\t\t\r\n                  </div>\r\n\t\t\t\t  {loading ? <Loader />\r\n                         : ( \r\n\t\t\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Table striped bordered hover size=\"sm\">\r\n                        \r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>Email Address</th>\r\n\t\t\t\t\t\t\t\t\t<th>FIRST NAME</th>\r\n\t\t\t\t\t\t\t\t\t<th>Date Sent</th>\r\n\t\t\t\t\t\t\t\t\t<th>ROLE</th>\r\n                                    <th>DEPARTMENT</th>\r\n\t\t\t\t\t\t\t\t\t<th>Subject</th>\r\n\t\t\t\t\t\t\t\t\t<th>View</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\t\r\n\t\t\t\t\t\t\t{data.map(user => (\r\n\t\t\t\t\t\t\t<tr key={user._id}>\r\n\t\t\t\t\t\t\t\t<td>{user.employee.email}</td>\r\n\t\t\t\t\t\t\t\t<td>{user.employee.firstname}</td>\r\n\t\t\t\t\t\t\t\t<td>{moment(user.createdAt).format(\"DD-MM-YYYY\")}</td>\r\n\t\t\t\t\t\t\t\t<td>{user.employee.role}</td>\r\n                                <td>{user.employee.department}</td>\r\n\t\t\t\t\t\t\t\t<td>{user.title}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<NavLink to={`/support/${user._id}/messaging`} exact className=\"update-btn\">\r\n\t\t\t\t\t\t\t\t\t\t<Button className='msg-btn'>\r\n\t\t\t\t\t\t\t\t\t\t\tReply\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\t\r\n\t\t\t\t\t\t\t\r\n            <Paginate\r\n\t\t\t\t\t\tdestination={employees}\r\n\t\t\t\t\t\tpages={pages} \r\n\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\tkeyword={keyword ? keyword : ''} />\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n        </div>\r\n      </main>\r\n\t  </div>\r\n\t  \r\n  );\r\n}\r\n\r\nexport default AllSupportService;","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\DepartmentLeavesScreen.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\ApproveLeaveScreen.js",["340"],"import React, { useState, useEffect } from 'react';\r\nimport { Col, Form, Button, Modal } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { approveEmployeeLeaveApplicationId, getAllEmployeeLeaveApplicationById,  rejectEmployeeLeaveApplicationId } from '../actions/leaveApplication';\r\nimport {  LEAVE_APPLICATION_DETAILS_ID_RESET, HOD_LEAVE_APPLICATION_UPDATE_EMPLOYEE_RESET,  LEAVE_APPLICATION_REJECT_RESET } from '../constants/leaveApplicationConstants';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport Message from '../components/Message';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ApproveLeaveScreen = ({ history, match }) => {\r\n  const leaveApplicationId = match.params.id\r\n\r\n\tconst [leaveType, setLeaveType] = useState('')\r\n    const [fromDate, setLeaveStartDate] = useState('')\r\n    const [toDate, setLeaveEndDate] = useState('')\r\n    const [noOfDays, setNoOfDays] = useState(0)\r\n    const [reasonForLeave, setLeaveDescription] = useState('')\r\n    const [leaveStatus, setLeaveStatus] = useState('')\r\n    const [approved, setApproved] = useState(false)\r\n    const [rejected, setRejected] = useState(false)\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n    setShow(true);\r\n  } \r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const leaveApplicationDetailsById = useSelector(state => state.leaveApplicationDetailsById)\r\n  const { leaveapplication } = leaveApplicationDetailsById\r\n\r\n  const approveLeaveApp = useSelector(state => state.approveLeaveApp)\r\n  const { success:successUpdate, error:errorUpdate } = approveLeaveApp\r\n\r\n  const rejectLeave = useSelector(state => state.rejectLeave)\r\n  const { success:successReject, error:errorReject } = rejectLeave\r\n\r\n\r\n  useEffect(() => {\r\n    if (userInfo  && (userInfo.role === 'Head Of Department')) {\r\n       if(successUpdate || successReject) {\r\n          dispatch({\r\n              type: HOD_LEAVE_APPLICATION_UPDATE_EMPLOYEE_RESET\r\n          })\r\n          dispatch({\r\n            type: LEAVE_APPLICATION_DETAILS_ID_RESET\r\n          })\r\n          dispatch({\r\n            type: LEAVE_APPLICATION_REJECT_RESET\r\n          })\r\n          history.push('/mydepartmentapplications')\r\n      } else {\r\n      if(!leaveapplication || !leaveapplication.leaveType || leaveapplication._id !== leaveApplicationId) {\r\n        dispatch(\r\n          getAllEmployeeLeaveApplicationById(leaveApplicationId)\r\n      )\r\n      console.log(leaveapplication)\r\n       } else {\r\n        setLeaveType(leaveapplication.leaveType)\r\n        setLeaveStartDate(moment(leaveapplication.fromDate).format(\"YYYY-MM-DD\"))\r\n        setLeaveEndDate(moment(leaveapplication.toDate).format(\"YYYY-MM-DD\"))\r\n        setLeaveDescription(leaveapplication.reasonForLeave)\r\n        setNoOfDays(leaveapplication.noOfDays)\r\n        setLeaveStatus(leaveapplication.leaveStatus)\r\n        setApproved(leaveapplication.hodApproval)\r\n        setRejected(leaveapplication.rejected)\r\n     \r\n      }\r\n    }\r\n    } else {\r\n      history.push('/')\r\n    }\r\n   \r\n    \r\n   \r\n      \r\n  }, [history, userInfo, leaveApplicationId, leaveapplication, successUpdate, successReject, dispatch])\r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if(!userInfo) {\r\n  //     history.push('/')\r\n  //   } else {\r\n  //     if(successUpdate) {\r\n  //         dispatch({\r\n  //             type: LEAVE_APPLICATION_UPDATE_EMPLOYEE_RESET\r\n  //         })\r\n  //         dispatch({\r\n  //             type: LEAVE_APPLICATION_DETAILS_RESET\r\n  //         })\r\n  //         history.push('/')\r\n  //     } else {\r\n  //       if(!myLeave || !myLeave.leaveStatus) {\r\n  //         dispatch(getAllEmployeeLeaveApplicationById(keyword, pageNumber))\r\n  //       } else {\r\n  //         setLeaveStatus(myLeave.leaveStatus)\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }, [dispatch, history, data, userInfo, keyword, pageNumber])\r\n\r\n\t\r\n\tconst updateMyLeaveHandler = (e) => {\r\n    e.preventDefault(e)\r\n\t\tdispatch(approveEmployeeLeaveApplicationId({\r\n      _id: leaveApplicationId,\r\n    }))\r\n    //history.push('/mydepartmentapplications')\r\n  }\r\n\r\n  const handleReject = (e) => {\r\n    e.preventDefault(e)\r\n    dispatch(rejectEmployeeLeaveApplicationId({\r\n      _id: leaveApplicationId,\r\n    }))\r\n    // console.log('This')\r\n  }\r\n\r\n  // ---- For the FixedNavBar\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n    \r\n  const openSidebar = () => {\r\n    setSidebarOpen(true);\r\n  };\r\n  \r\n  const closeSidebar = () => {\r\n    setSidebarOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <>     \r\n\r\n      <div className=\"dashboard-container\">\r\n        <Header sidebarOpen={sidebarOpen} openSidebar={openSidebar} />\r\n        <FixedNavbar sidebarOpen={sidebarOpen} closeSidebar={closeSidebar} />\r\n        <main className='profilescreen-wrapper'>\r\n          <div className=\"dashboard-body\">\r\n             <div className='allLeave-title'>\r\n          <h3>Update Leave Request</h3>\r\n          </div>\r\n          {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n          {errorReject && <Message variant='danger'>{errorReject}</Message>}\r\n          <Form onSubmit={updateMyLeaveHandler} className='form-shadow'>\r\n            \r\n          \r\n              <Form.Row>\r\n              <Form.Group as={Col} controlId=\"leaveType\">\r\n                <Form.Label>Leave Type</Form.Label>\r\n                <Form.Control \r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n                  value={leaveType}\r\n                  onChange={(e) => setLeaveType(e.target.value)}\r\n                  disabled\r\n                   >\r\n                </Form.Control>\r\n            </Form.Group>\r\n                <Form.Group as={Col} controlId='noOfDays'>\r\n                  <Form.Label>No Of Days</Form.Label>\r\n                  <Form.Control type='number' placeholder='0'  value={noOfDays}\r\n                    onChange={(e) => setNoOfDays(e.target.value)} disabled></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              \r\n              <Form.Row>\r\n              <Form.Group as={Col} controlId='startDate'>\r\n\t\t\t\t\t\t\t\t<Form.Label>Start Date</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\t\t\ttype='date'\r\n                  value={fromDate}\r\n                  onChange={(e) => setLeaveStartDate(e.target.value)}\r\n                  disabled\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group as={Col} controlId='endDate'>\r\n\t\t\t\t\t\t\t\t<Form.Label>End Date</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\t\t\ttype='date'\r\n                  value={toDate}\r\n                  onChange={(e) => setLeaveEndDate(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n              </Form.Row>\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Detailed Reason For Leave Application</Form.Label>\r\n                <Form.Control \r\n                  as=\"textarea\" \r\n                  rows={4} \r\n                  style={{ backgroundColor: 'var(--input-field-color)' }}\r\n                  value={reasonForLeave}\r\n                  onChange={(e) => setLeaveDescription(e.target.value)}\r\n                  disabled\r\n                  />\r\n              </Form.Group>\r\n            {\r\n              approved ? (\r\n                <Link to='/mydepartmentapplications' className='btn btn-light my-3 go-back-btn'>\r\n                    APPROVED || Go Back\r\n                </Link>\r\n              ) : rejected ? (\r\n                <Link to='/mydepartmentapplications' className='btn btn-light my-3 go-back-btn'>\r\n                    REJECTED || Go Back\r\n                </Link>\r\n              ) :\r\n                <>\r\n                <Button className='applyleave-btn mb-2 mr-3' type='submit'>\r\n                  Approve\r\n                </Button>\r\n                <Button className='mb-2 rejectleave-btn' onClick={handleShow} >\r\n                    Reject\r\n                  </Button>\r\n                   <Modal show={show} onHide={handleClose}>\r\n                  <div className='not-eligible'>\r\n              <div className='not-eligible-container'>\r\n        <Modal.Header closeButton>\r\n         \r\n          <Modal.Title>Reject Leave</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          \r\n                <i className=\"fas fa-exclamation-triangle fa-2x pb-3\"></i><br/>\r\n          <p><h3>Are you sure you want to Reject!</h3></p>\r\n         \r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button className='mb-2 rejectleave-btn' style={{ backgroundColor: '#e2522e', borderRadius: 50 }} onClick={handleReject}>\r\n            Reject\r\n          </Button>\r\n        </Modal.Footer>\r\n         </div>\r\n          </div>\r\n      </Modal>\r\n                </>\r\n              \r\n            }\r\n            \r\n          </Form>\r\n            </div>\r\n            <Footer />\r\n        </main>\r\n\t    </div>\r\n    \t\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApproveLeaveScreen;","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\EmployeeUpdateLeaveScreen.js",["341"],"import React, { useState, useEffect } from 'react';\r\nimport { Col, Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport Message from '../components/Message';\r\nimport { Link } from 'react-router-dom';\r\nimport { EMPLOYEE_UPDATE_LEAVE_APPLICATION_RESET, LEAVE_APPLICATION_DETAILS_ID_RESET } from '../constants/leaveApplicationConstants';\r\nimport { employeeUpdateApplication, getAllEmployeeLeaveApplicationById } from '../actions/leaveApplication';\r\n\r\nconst EmployeeUpdateLeaveScreen = ({ history, match }) => {\r\n    const leaveApplicationId = match.params.id\r\n\r\n\tconst [leaveType, setLeaveType] = useState('')\r\n    const [fromDate, setLeaveStartDate] = useState('')\r\n    const [toDate, setLeaveEndDate] = useState('')\r\n    const [noOfDays, setNoOfDays] = useState(0)\r\n    const [reasonForLeave, setLeaveDescription] = useState('')\r\n    const [leaveStatus, setLeaveStatus] = useState('')\r\n    const [approved, setApproved] = useState(false)\r\n    const [rejected, setRejected] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const leaveApplicationDetailsById = useSelector(state => state.leaveApplicationDetailsById)\r\n    const { leaveapplication } = leaveApplicationDetailsById\r\n\r\n    const employeeUpdateLeave = useSelector(state => state.employeeUpdateLeave)\r\n    const { success:successUpdate, error:errorUpdate } = employeeUpdateLeave\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n           if(successUpdate) {\r\n              dispatch({\r\n                  type: EMPLOYEE_UPDATE_LEAVE_APPLICATION_RESET\r\n              })\r\n              dispatch({\r\n                  type: LEAVE_APPLICATION_DETAILS_ID_RESET\r\n              })\r\n              history.push('/myleave')\r\n          } else {\r\n          if(!leaveapplication || !leaveapplication.leaveType || leaveapplication._id !== leaveApplicationId) {\r\n            dispatch(\r\n            getAllEmployeeLeaveApplicationById(leaveApplicationId)\r\n          )\r\n           } else {\r\n            setLeaveType(leaveapplication.leaveType)\r\n            setLeaveStartDate(moment(leaveapplication.fromDate).format(\"YYYY-MM-DD\"))\r\n            setLeaveEndDate(moment(leaveapplication.toDate).format(\"YYYY-MM-DD\"))\r\n            setNoOfDays(leaveapplication.noOfDays)\r\n            setLeaveDescription(leaveapplication.reasonForLeave)\r\n            setLeaveStatus(leaveapplication.leaveStatus)\r\n            setApproved(leaveapplication.finalApproval)\r\n            setRejected(leaveapplication.rejected)\r\n         \r\n          }\r\n        }\r\n        } else {\r\n          history.push('/')\r\n        }\r\n       \r\n        \r\n       \r\n          \r\n      }, [history, userInfo, leaveApplicationId, leaveapplication, successUpdate, dispatch])\r\n\r\n      const updateMyLeaveHandler = (e) => {\r\n        e.preventDefault(e)\r\n            dispatch(employeeUpdateApplication({\r\n          _id: leaveApplicationId,\r\n          leaveType,\r\n          fromDate,\r\n          toDate,\r\n          noOfDays,\r\n          reasonForLeave,\r\n        }))\r\n        // history.push('/leaveapplications')\r\n      }\r\n\r\n       // ---- For the FixedNavBar\r\n    const [sidebarOpen, setSidebarOpen] = useState(false);\r\n        \r\n    const openSidebar = () => {\r\n        setSidebarOpen(true);\r\n    };\r\n    \r\n    const closeSidebar = () => {\r\n        setSidebarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>     \r\n\r\n      <div className=\"dashboard-container\">\r\n        <Header sidebarOpen={sidebarOpen} openSidebar={openSidebar} />\r\n        <FixedNavbar sidebarOpen={sidebarOpen} closeSidebar={closeSidebar} />\r\n        <main className='profilescreen-wrapper'>\r\n          <div className=\"dashboard-body\">\r\n          <h1 className='page-header'>UPDATE LEAVE</h1>\r\n          {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n          <Form onSubmit={updateMyLeaveHandler} className='form-shadow'>\r\n            \r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"leaveType\">\r\n                    <Form.Label>Leave Type</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        value={leaveType}\r\n                        onChange={(e) => setLeaveType(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId='noOfDays'>\r\n                  <Form.Label>No Of Days</Form.Label>\r\n                  <Form.Control type='number' placeholder='0'  value={noOfDays}\r\n                    onChange={(e) => setNoOfDays(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              \r\n              <Form.Row>\r\n              <Form.Group as={Col} controlId='startDate'>\r\n                <Form.Label>Start Date</Form.Label>\r\n                <Form.Control \r\n                    type='date'\r\n                  value={fromDate}\r\n                  onChange={(e) => setLeaveStartDate(e.target.value)}\r\n                  \r\n                    >\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId='endDate'>\r\n                <Form.Label>End Date</Form.Label>\r\n                <Form.Control \r\n                    type='date'\r\n                    value={toDate}\r\n                    onChange={(e) => setLeaveEndDate(e.target.value)}\r\n                    \r\n                ></Form.Control>\r\n            </Form.Group>\r\n            </Form.Row>\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Detailed Reason For Leave Application</Form.Label>\r\n                <Form.Control \r\n                  as=\"textarea\" \r\n                  rows={4} \r\n                  style={{ backgroundColor: 'var(--input-field-color)' }}\r\n                  value={reasonForLeave}\r\n                  onChange={(e) => setLeaveDescription(e.target.value)}\r\n                  />\r\n              </Form.Group>\r\n              {\r\n              approved ? (\r\n                <Link to='/myleave' className='btn btn-light my-3 go-back-btn'>\r\n                    APPROVED || Go Back\r\n                </Link>\r\n              ) : rejected ? (\r\n                <Link to='/myleave' className='btn btn-light my-3 go-back-btn'>\r\n                    REJECTED || Go Back\r\n                </Link>\r\n              ) :\r\n                <>\r\n                <Button className='applyleave-btn mb-2 mr-3' type='submit'>\r\n                  Update\r\n                </Button>\r\n                </>\r\n              \r\n            }\r\n          </Form>\r\n            </div>\r\n            <Footer />\r\n        </main>\r\n\t    </div>\r\n    \t\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeeUpdateLeaveScreen\r\n","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\SupportMessaging.js",["342","343"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, InputGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getSingleMessageAction, createResponseAction, getResponseDetailsAction } from '../actions/messageActions';\r\nimport moment from 'moment';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\n\r\nconst SupportMessaging = ({ history, match }) => {\r\n  const singleMessageId = match.params.id\r\n  \r\n\r\n\tconst [response, setResponse] = useState('')\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const singleMessage = useSelector(state => state.singleMessage)\r\n  const { responses } = singleMessage\r\n\r\n  const responseDetails = useSelector(state => state.responseDetails)\r\n  const { data } = responseDetails\r\n\r\n  const createResponse = useSelector(state => state.createResponse)\r\n  const { success:successCreate, error:errorCreate } = createResponse\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n   const { user } = userDetails\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(\r\n        getSingleMessageAction(singleMessageId), \r\n      )\r\n      dispatch(getResponseDetailsAction(singleMessageId))\r\n    }\r\n    else {\r\n      history.push('/')\r\n    }\r\n  }, [dispatch, history, userInfo, data, responses, singleMessageId, successCreate])\r\n\r\n \r\n  const postMyResponseHandler = (e) => {\r\n    e.preventDefault(e)\r\n\t\tdispatch(createResponseAction({\r\n      message: singleMessageId,\r\n      response\r\n    }))\r\n    setResponse(\"\")\r\n  }\r\n\r\n\r\n  // ---- For the FixedNavBar\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const openSidebar = () => {\r\n    setSidebarOpen(true)\r\n  }\r\n  const closeSidebar = () => {\r\n    setSidebarOpen(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <>     \r\n      <div className=\"dashboard-container\">\r\n        <Header sidebarOpen={sidebarOpen} openSidebar={openSidebar} />\r\n        <FixedNavbar sidebarOpen={sidebarOpen} closeSidebar={closeSidebar} />\r\n        <main className='profilescreen-wrapper messaging' closeButton>\r\n          <div className=\"dashboard-body\">\r\n            <div className=\"messaging-box\">\r\n                <div className=\"message-header\">\r\n                    <h4>Subject: {responses.title}</h4> \r\n                    <div>\r\n                      <NavLink to={`/supportservice`} exact=\"true\" className=\"update-btn\">\r\n\t\t\t\t\t\t\t\t\t\t<Button className='msg-btn  back-btn '>\r\n\t\t\t\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n                    </div>\r\n\r\n                </div>\r\n              <div className=\"messaging-container\">\r\n                <p className=\"msg-wrapper \">{responses.body}</p>\r\n                <div className=\"sender-details\">\r\n                </div>\r\n                {data.map(user => (\r\n                  <>\r\n                  <span className='mgs-left text-black'>\r\n                    <p key={user._id} className=\"msg-wrapper-reply \">{user.response}</p>\r\n                    <div className=\"sender-details\">\r\n                      <span><i className=\"fas fa-circle\"/> {user.employee.firstname} - {user.employee.email}</span>\r\n                      <span id=\"msg-date\">{moment(user.createdAt).format(\"DD-MM-YYYY HH:MM\")}</span>\r\n                    </div>\r\n                    </span>\r\n                  </>\r\n                ))}\r\n              </div>\r\n              <div className=\"messaging-form\">\r\n                <Form onSubmit={postMyResponseHandler} className=\"messaging-input-field\">\r\n                  <Form.Group controlId='inputText'>\r\n                    <InputGroup>\r\n                      <Form.Control \r\n                        type=\"text\" \r\n                        placeholder='Type a message..'\r\n                        value={response}\r\n                        onChange={(e) => setResponse(e.target.value)} />\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <Button type=\"submit\" className='send-btn'>\r\n                            <i className=\"fas fa-paper-plane\" />\r\n                          </Button>\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n              {/* {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n              {successCreate && <Message>{successCreate}</Message>} */}\r\n            </div>\r\n          </div>\r\n        </main>\r\n\t    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SupportMessaging;","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIUserAssessment.js",["344","345","346","347","348"],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPITeamAssessments.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIHODReview.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIAllAssessment.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIHRreview.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIuserOverview.js",["349","350"],"import React, { useState } from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\n\r\n\r\nconst UserKPIOverview = () => {\r\n\r\n  // ---- For the FixedNavBar\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const openSidebar = () => {\r\n    setSidebarOpen(true)\r\n  }\r\n  const closeSidebar = () => {\r\n    setSidebarOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n\t\t\t<Header sidebarOpen={sidebarOpen} openSidebar={openSidebar} />\r\n\t\t\t<FixedNavbar sidebarOpen={sidebarOpen} closeSidebar={closeSidebar} />\r\n\t\t\t<main>\r\n\t\t\t\t<div className=\"chat-screen-wrapper container-fluid\">\r\n\t\t\t\t\t<div className=\"mt-4 EmployeeDetailsKpi\" >\r\n                        <div className=\"employeeDetailsCard\">\r\n                            <div className=\"EmpCardText\">\r\n                            <p>Name: </p>\r\n                            <span> Oduka Ikemba</span>\r\n                            </div>\r\n                            <div className=\"EmpCardText\">\r\n                            <p>Emp ID: </p>\r\n                            <span> OUT/ADM/223</span>\r\n                            </div>\r\n                            <div className=\"EmpCardText\">\r\n                            <p>Department: </p>\r\n                            <span> Software And It </span>\r\n                            </div>\r\n                            <div className=\"EmpCardText\">\r\n                            <p>Final Score: </p>\r\n                            <span> 90% </span>\r\n                            </div>\r\n                        </div>\r\n\t\t\t\t\t\t\r\n                        <div className=\"HrEmployeeKpiReview\">\r\n\r\n                        </div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Table striped bordered hover size=\"sm\" >\r\n                        \r\n\t\t\t\t\t\t\t<thead class=\"HrKpiHeader\">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>Employee KPI</th>\r\n\t\t\t\t\t\t\t\t\t<th>Emp Score</th>\r\n\t\t\t\t\t\t\t\t\t<th>HOD Score</th>\r\n\t\t\t\t\t\t\t\t\t<th>HOD Comments</th>\r\n                                    <th>Hr Comments</th>\r\n\t\t\t\t\t\t\t\t\t<th>Emp Rating</th>\r\n\t\t\t\t\t\t\t\t\t<th>HOD Rating</th>\r\n\t\t\t\t\t\t\t\t\t<th>Final Rating</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\t\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Approach to work</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<td>3</td>\r\n\t\t\t\t\t\t\t\t\t<td>4</td>\r\n\t\t\t\t\t\t\t\t\t<td>Needs a certifcation and raise</td>\r\n                                    <td> - </td>\r\n\t\t\t\t\t\t\t\t\t<td>50%</td>\r\n\t\t\t\t\t\t\t\t\t<td>50%</td>\r\n\t\t\t\t\t\t\t\t\t<td>100%</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Intelligence</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<td>3</td>\r\n\t\t\t\t\t\t\t\t\t<td>4</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>Development Approach</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<td>3</td>\r\n\t\t\t\t\t\t\t\t\t<td>4</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Coding Skill</td>\r\n\t\t\t\t\t\t\t\t\t<td>2</td>\r\n\t\t\t\t\t\t\t\t\t<td>1</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Coding Skill</td>\r\n\t\t\t\t\t\t\t\t\t<td>2</td>\r\n\t\t\t\t\t\t\t\t\t<td>1</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</div>\r\n        </div>\r\n      </main>\r\n\t  </div>\r\n\t  \r\n  )\r\n}\r\n\r\nexport default UserKPIOverview;","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\KPIuserDetails.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\JobApplication.js",["351"],"import React, { useState, useEffect } from 'react';\r\nimport logo from \"../img/outcess-logo-white.png\";\r\nimport { createJobApplication } from '../actions/jobApplicantsAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\n\r\nconst JobApplication = ({ history }) => {\r\n\r\n  const [fullname, setFullName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [gender, setGender] = useState('')\r\n  const [age, setAge] = useState('')\r\n  const [phoneNumber, setPhoneNumber] = useState('')\r\n  const [address, setAddress] = useState('')\r\n  const [jobLocation, setJobLocation] = useState('')\r\n  const [educationalQualification, setEducationalQualification] = useState('')\r\n  const [nyscStatus, setNyscStatus] = useState('')\r\n  const [operatingWindow, setOperatingWindow] = useState('')\r\n  const [yearsOfExperience, setYearsOfExperience] = useState(0)\r\n  const [igboLanguage, setIgboLanguage] = useState(false)\r\n  const [hausaLanguage, setHausaLanguage] = useState(false)\r\n  const [yorubaLanguage, setYorubaLanguage] = useState(false)\r\n  const [englishLanguage, setEnglishLanguage] = useState(false)\r\n  const [frenchLanguage, setFrenchLanguage] = useState(false)\r\n\r\n  const createJobApp = useSelector(state => state.createJobApp)\r\n  const { success:successCreate, error:errorCreate } = createJobApp\r\n\r\n  useEffect(() => {\r\n    if(successCreate) {\r\n      history.push('/jobapplication')\r\n    }\r\n  }, [successCreate])\r\n\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault(e)\r\n    dispatch(createJobApplication(\r\n      fullname,\r\n      email,\r\n      gender, \r\n      age,\r\n      phoneNumber, \r\n      address,\r\n      jobLocation, \r\n      educationalQualification, \r\n      nyscStatus,\r\n      operatingWindow,\r\n      yearsOfExperience,\r\n      igboLanguage,\r\n      hausaLanguage,\r\n      yorubaLanguage,\r\n      englishLanguage,\r\n      frenchLanguage\r\n      ))  \r\n      console.log(frenchLanguage, englishLanguage)   \r\n    }\r\n \r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"job-survey-container\">\r\n          <div className=\"header job-logo\">\r\n            <img src={logo} alt=\"logo\" /> \r\n            <h1>Job Application Form </h1>\r\n          </div>\r\n          {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n          {successCreate ? (\r\n            <div className=\"success-msg\">\r\n              <i className=\"far fa-check-circle fa-4x\"></i>\r\n              <p>Your form has been Submitted!</p>\r\n            </div>\r\n          ) : (\r\n            <form className=\"form-main\" onSubmit={submitHandler}>\r\n            <p>Job Location</p>\r\n              <select id=\"jobLocation\" value={jobLocation} onChange={(e) => setJobLocation(e.target.value)}>\r\n                <option value=\"select\">Select</option>\r\n                <option value=\"Lagos\">Lagos</option>\r\n                <option value=\"Enugu\">Enugu</option>\r\n              </select>\r\n              <p>Full Name</p>\r\n              <input\r\n                value={fullname}\r\n                onChange={(e) => setFullName(e.target.value)}\r\n                type=\"text\"\r\n                id=\"fullname\"\r\n                placeholder=\"John Doe\"\r\n              />\r\n              <p>Email Address</p>\r\n              <input\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                type=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"john@example.com\"\r\n              />\r\n  \r\n              <p>Gender</p>\r\n              <select id=\"gender\" value={gender} onChange={(e) => setGender(e.target.value)}>\r\n                <option >Select</option>\r\n                <option value=\"Male\">Male</option>\r\n                <option value=\"Female\">Female</option>\r\n              </select>\r\n              <p>Age</p>\r\n              <input id=\"age\" type=\"number\" placeholder=\"Enter your age\" value={age} onChange={(e) => setAge(e.target.value)} />\r\n              <p >Mobile Number</p>\r\n              <input\r\n                id=\"phoneNumber\"\r\n                type=\"text\"\r\n                value={phoneNumber}\r\n                onChange={(e) => setPhoneNumber(e.target.value)}\r\n                placeholder=\"Enter phone number\"\r\n              />\r\n              <p>Area of Residence</p>\r\n              <input \r\n                id=\"address\" \r\n                type=\"text\" \r\n                placeholder=\"Enter Home Address\" \r\n                value={address} \r\n                onChange={(e) => setAddress(e.target.value)}/>\r\n              <p>Educational Qualification</p>\r\n              <select id=\"educationQualification\" value={educationalQualification} onChange={(e) => setEducationalQualification(e.target.value)}>\r\n                <option value=\"select\">Select</option>\r\n                <option value=\"BSC\">B.Sc</option>\r\n                <option value=\"MSC\">M.Sc</option>\r\n                <option value=\"HND\">HND</option>\r\n                <option value=\"OND\">OND</option>\r\n                <option value=\"SSCE\">SSCE</option>\r\n              </select>\r\n              <p>NYSC Status</p>\r\n              <select id=\"nyscStatus\" value={nyscStatus} onChange={(e) => setNyscStatus(e.target.value)}>\r\n                <option value=\"select\">Select</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"currently serving\">Currently Serving</option>\r\n                <option value=\"not served\">Not Served</option>\r\n              </select>\r\n              <p>Operation Window</p>\r\n              <select id=\"operatingWindow\" value={operatingWindow} onChange={(e) => setOperatingWindow(e.target.value)}>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"Inbound [8:00am-3:30pm]\">Inbound [8:00am-3:30pm]</option>\r\n                <option value=\"Inbound [1:00pm-9:00pm]\">Inbound [1:00pm-9:00pm]</option>\r\n                <option value=\"Inbound [8:30pm-8:30am]\">Inbound [8:30pm-8:30am]</option>\r\n                <option value=\"Outbound [8:00am-5:00pm]\">Outbound [8:00am-5:00pm]</option>\r\n                <option value=\"Recovery [8:00am-5:00pm]\">Recovery [8:00am-5:00pm]</option>\r\n              </select>\r\n              <p>Years of Experience</p>\r\n              <input\r\n                id=\"yearsOfExperience\"\r\n                value={yearsOfExperience}\r\n                onChange={(e) => setYearsOfExperience(e.target.value)}\r\n                type=\"number\"\r\n                placeholder=\"Enter Number of Years\"\r\n              />\r\n              <div className=\"language-type\">\r\n              <p>Spoken Languages</p>\r\n              <input\r\n                id=\"igboLanguage\"\r\n                checked={igboLanguage}\r\n                onChange={(e) => setIgboLanguage(e.target.checked)}\r\n                type=\"checkbox\"\r\n              />\r\n              <span>Igbo</span> <br />\r\n              \r\n              <input\r\n                id=\"hausaLanguage\"\r\n                checked={hausaLanguage}\r\n                onChange={(e) => setHausaLanguage(e.target.checked)}\r\n                type=\"checkbox\" \r\n              />\r\n              <span>Hausa</span> <br />\r\n  \r\n              <input\r\n                id=\"yorubaLanguage\"\r\n                checked={yorubaLanguage}\r\n                onChange={(e) => setYorubaLanguage(e.target.checked)}\r\n                type=\"checkbox\"\r\n              />\r\n              <span>Yoruba</span> <br />\r\n               \r\n              <input\r\n                id=\"frenchLanguage\"\r\n                checked={frenchLanguage}\r\n                onChange={(e) => setFrenchLanguage(e.target.checked)}\r\n                type=\"checkbox\"\r\n              />\r\n              <span>French</span> <br />\r\n              \r\n              <input\r\n                id=\"englishLanguage\"\r\n                checked={englishLanguage}\r\n                onChange={(e) => setEnglishLanguage(e.target.checked)}\r\n                type=\"checkbox\"\r\n              />\r\n              <span>English</span> <br />\r\n              </div>\r\n              <button type=\"submit\" className=\"apply-button\">Apply</button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobApplication;\r\n","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\screens\\AllJobApplications.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\userConstants.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\nextOfKinConstants.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\profileConstants.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\educationConstants.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\leaveApplicationConstants.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\agentLeaveContants.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\messageConstants.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\constants\\jobApplicantsConstants.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\Message.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\Footer.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\Header.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\FixedNavbar.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\Paginate.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\SearchBox.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\userActions.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\leaveApplication.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\jobApplicantsAction.js",["352"],"import axios from 'axios'\r\nimport {JOB_APPLICANTS_CREATE_REQUEST, JOB_APPLICANTS_CREATE_SUCCESS,JOB_APPLICANTS_CREATE_FAIL,JOB_APPLICANTS_DETAILS_REQUEST, JOB_APPLICANTS_DETAILS_SUCCESS, JOB_APPLICANTS_DETAILS_FAIL } from '../constants/jobApplicantsConstants'\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const createJobApplication = (\r\n          fullname,\r\n          email,\r\n          gender, \r\n          age,\r\n          phoneNumber, \r\n          address,\r\n          jobLocation, \r\n          educationalQualification, \r\n          nyscStatus,\r\n          operatingWindow,\r\n          yearsOfExperience,\r\n          igboLanguage,\r\n          hausaLanguage,\r\n          yorubaLanguage,\r\n          englishLanguage,\r\n          frenchLanguage,\r\n\r\n) => async (dispatch, getState) =>  {\r\n    try {\r\n        dispatch({\r\n            type: JOB_APPLICANTS_CREATE_REQUEST\r\n        })\r\n\r\n        \r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }\r\n\r\n        await axios.post(\r\n            baseUrl + '/api/v1/jobapplications', {\r\n                fullname,\r\n                email,\r\n                gender, \r\n                age,\r\n                phoneNumber, \r\n                address,\r\n                jobLocation, \r\n                educationalQualification, \r\n                nyscStatus,\r\n                operatingWindow,\r\n                yearsOfExperience,\r\n                igboLanguage,\r\n                hausaLanguage,\r\n                yorubaLanguage,\r\n                englishLanguage,\r\n                frenchLanguage,\r\n            },\r\n            config)\r\n            \r\n\r\n        dispatch({\r\n            type: JOB_APPLICANTS_CREATE_SUCCESS,\r\n            success: true,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: JOB_APPLICANTS_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message\r\n                : error.message,\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nexport const getAllApplicantsForm = () => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: JOB_APPLICANTS_DETAILS_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            baseUrl + `/api/v1/jobapplications`, config)\r\n\r\n        dispatch({\r\n            type: JOB_APPLICANTS_DETAILS_SUCCESS,\r\n            payload: data\r\n           \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: JOB_APPLICANTS_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? \r\n            error.response.data.message : error.message,\r\n        })\r\n    }\r\n}","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\messageActions.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\Loader.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\agentLeaveActions.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\shared\\baseUrl.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\components\\AdminFixedNav.js",["353"],"import React, { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, logout } from '../actions/userActions';\r\nimport '../styles/FixedNavbar.css';\r\nimport logo from \"../img/outcess-logo.png\";\r\n\r\n\r\nconst AdminFixedNavbar = ({ history, userId, sidebarOpen, closeSidebar }) => {\r\n   \r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { user } = userDetails\r\n\r\n  useEffect(() => {\r\n\r\n    if(!userInfo) {\r\n      history.push('/')\r\n    } \r\n    else {\r\n      dispatch(getUserDetails('me'))\r\n    }\r\n  }, [dispatch, history, user, userInfo])\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n        <>\r\n          <div className={sidebarOpen ? \"fixednavbar-responsive\" : \"\"} id=\"sidebar\">\r\n            <div className=\"fixednavbar-title\">\r\n                <div className=\"fixednavbar-img\">\r\n                    <img src={logo} alt=\"logo\" />\r\n                </div>\r\n                <i\r\n                className=\"fa fa-times\"\r\n                id=\"sidebarIcon\"\r\n                onClick={() => closeSidebar()}\r\n                ></i>\r\n            </div>\r\n            <div className=\"fixednavbar-menu\">\r\n            <Nav className=\"flex-column\">\r\n                <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n                <i className=\"fas fa-home\"></i>\r\n                All Employees\r\n                </NavLink>\r\n                <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n                <i className=\"far fa-id-card\"></i>\r\n                Details\r\n                </NavLink>\r\n                <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n                <i className=\"fas fa-user-circle\"></i>\r\n                Profile\r\n                </NavLink>\r\n                <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n                <i className=\"fas fa-graduation-cap\"></i>\r\n                Education\r\n                </NavLink>\r\n                <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n                <i className=\"fas fa-user-friends\"></i>\r\n                Employee Next Of Kin\r\n                </NavLink>\r\n                <NavLink to={`/admin/password/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n                <i className=\"fas fa-id-card\"></i>\r\n                Reset Password\r\n                </NavLink>\r\n            </Nav>\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminFixedNavbar;\r\n","C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\educationActions.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\nextOfKinActions.js",[],"C:\\Users\\TOFA\\Desktop\\hr-mgt-app\\src\\actions\\profileActions.js",[],{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","severity":1,"message":"359","line":3,"column":10,"nodeType":"360","messageId":"361","endLine":3,"endColumn":24},{"ruleId":"358","severity":1,"message":"362","line":14,"column":11,"nodeType":"360","messageId":"361","endLine":14,"endColumn":19},{"ruleId":"358","severity":1,"message":"363","line":31,"column":10,"nodeType":"360","messageId":"361","endLine":31,"endColumn":17},{"ruleId":"358","severity":1,"message":"364","line":31,"column":19,"nodeType":"360","messageId":"361","endLine":31,"endColumn":28},{"ruleId":"358","severity":1,"message":"365","line":136,"column":9,"nodeType":"360","messageId":"361","endLine":136,"endColumn":17},{"ruleId":"358","severity":1,"message":"366","line":21,"column":10,"nodeType":"360","messageId":"361","endLine":21,"endColumn":21},{"ruleId":"358","severity":1,"message":"367","line":47,"column":11,"nodeType":"360","messageId":"361","endLine":47,"endColumn":18},{"ruleId":"358","severity":1,"message":"368","line":47,"column":20,"nodeType":"360","messageId":"361","endLine":47,"endColumn":29},{"ruleId":"358","severity":1,"message":"369","line":8,"column":45,"nodeType":"360","messageId":"361","endLine":8,"endColumn":60},{"ruleId":"358","severity":1,"message":"370","line":39,"column":12,"nodeType":"360","messageId":"361","endLine":39,"endColumn":16},{"ruleId":"358","severity":1,"message":"366","line":21,"column":12,"nodeType":"360","messageId":"361","endLine":21,"endColumn":23},{"ruleId":"358","severity":1,"message":"366","line":21,"column":12,"nodeType":"360","messageId":"361","endLine":21,"endColumn":23},{"ruleId":"358","severity":1,"message":"371","line":28,"column":40,"nodeType":"360","messageId":"361","endLine":28,"endColumn":51},{"ruleId":"358","severity":1,"message":"370","line":31,"column":12,"nodeType":"360","messageId":"361","endLine":31,"endColumn":16},{"ruleId":"358","severity":1,"message":"372","line":12,"column":9,"nodeType":"360","messageId":"361","endLine":12,"endColumn":19},{"ruleId":"358","severity":1,"message":"373","line":34,"column":10,"nodeType":"360","messageId":"361","endLine":34,"endColumn":17},{"ruleId":"358","severity":1,"message":"374","line":34,"column":19,"nodeType":"360","messageId":"361","endLine":34,"endColumn":29},{"ruleId":"358","severity":1,"message":"375","line":42,"column":9,"nodeType":"360","messageId":"361","endLine":42,"endColumn":14},{"ruleId":"358","severity":1,"message":"376","line":46,"column":9,"nodeType":"360","messageId":"361","endLine":46,"endColumn":20},{"ruleId":"358","severity":1,"message":"377","line":2,"column":17,"nodeType":"360","messageId":"361","endLine":2,"endColumn":23},{"ruleId":"358","severity":1,"message":"378","line":3,"column":10,"nodeType":"360","messageId":"361","endLine":3,"endColumn":17},{"ruleId":"379","severity":1,"message":"380","line":33,"column":6,"nodeType":"381","endLine":33,"endColumn":21,"suggestions":"382"},{"ruleId":"358","severity":1,"message":"383","line":30,"column":30,"nodeType":"360","messageId":"361","endLine":30,"endColumn":38},{"ruleId":"358","severity":1,"message":"384","line":30,"column":9,"nodeType":"360","messageId":"361","endLine":30,"endColumn":22},"no-native-reassign",["385"],"no-negated-in-lhs",["386"],"no-unused-vars","'getUserDetails' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'headeHR' is assigned a value but never used.","'setHeadHR' is assigned a value but never used.","'dropDown' is assigned a value but never used.","'leaveStatus' is assigned a value but never used.","'loading' is assigned a value but never used.","'teamLeads' is assigned a value but never used.","'messageResponse' is defined but never used.","'user' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'ratings' is assigned a value but never used.","'setRatings' is assigned a value but never used.","'score' is assigned a value but never used.","'handleTotal' is assigned a value but never used.","'Button' is defined but never used.","'NavLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["387"],"'userInfo' is assigned a value but never used.","'logoutHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"388","fix":"389"},"Update the dependencies array to be: [history, successCreate]",{"range":"390","text":"391"},[1457,1472],"[history, successCreate]"]